>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test: Basic matrix division
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test: Division by a float
>>> matrix = [[1.5, 3.0], [4.5, 6.0]]
>>> matrix_divided(matrix, 1.5)
[[1.0, 2.0], [3.0, 4.0]]

# Test: Division by a negative number
>>> matrix = [[-3, -6], [9, 12]]
>>> matrix_divided(matrix, -3)
[[1.0, 2.0], [-3.0, -4.0]]

# Test: Empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 2)
[]

# Test: Non-numeric elements in the matrix
>>> matrix = [[1, "two"], [3, 4]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test: Rows of unequal sizes
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test: Non-numeric divisor
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, "two")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test: Division by zero
>>> matrix = [[1, 2], [3, 4]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test: Large matrix with floats
>>> matrix = [[100.5, 200.5], [300.5, 400.5]]
>>> matrix_divided(matrix, 2)
[[50.25, 100.25], [150.25, 200.25]]

# Test: Immutability of the original matrix
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> new_matrix = matrix_divided(matrix, 2)
>>> new_matrix
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]
